# suppress inspection "UnusedProperty" for whole file

# More on this file here: https://github.com/processing/processing/wiki/Library-Basics
# UTF-8 supported.

# The name of your library as you want it formatted.
name=LazyGui

# A web page for your library, NOT a direct link to where to download it.
url=https://github.com/KrabCode/LazyGui

# The category of your library, must be one (or many) of the following:
#   "3D"            "Animation"     "Compilations"      "Data"
#   "Fabrication"   "Geometry"      "GUI"               "Hardware"
#   "I/O"           "Language"      "Math"              "Simulation"
#   "Sound"         "Utilities"     "Typography"        "Video & Vision"
#
# If a value other than those listed is used, your library will be listed as
# "Other".
category=GUI

# List of authors. Links can be provided using the syntax [author name](url).
authors=[Jakub Rak](https://github.com/KrabCode)

# A short sentence (or fragment) to summarize the library's function. This will
# be shown from inside the PDE when the library is being installed. Avoid
# repeating the name of your library here. Also, avoid saying anything redundant
# like mentioning that it's a library. This should start with a capitalized
# letter, and end with a period.
sentence=Feature rich, visually minimalist GUI with a smooth tinkering experience.

# Additional information suitable for the Processing website. The value of
# 'sentence' will always be prepended, so you should start by writing the
# second sentence here. If your library only works on certain operating systems,
# mention it here.
paragraph=Make more complex scenes and animations faster by not mentioning any control elements or folders in setup(). Only ask for their values in draw() at unique string paths and let the GUI take care of the windows and control elements. Features a json save system with autosave on program exit, copy/paste, undo/redo, these control elements: [slider, 2D plot, color picker, gradient picker, button, toggle, text input, radio], and much more... Developed on Windows, but should work on Mac and Linux too.


# A version number that increments once with each release. This is used to
# compare different versions of the same library, and check if an update is
# available. You should think of it as a counter, counting the total number of
# releases you've had.

# This must be parsable as an int
version=21

# The version as the user will see it. If blank, the version attribute will be
# used here.
prettyVersion=v0.21.0

# The min and max revision of Processing compatible with your library.
# Note that these fields use the revision and not the version of Processing,
# parsable as an int. For example, the revision number for 2.2.1 is 227.
# You can find the revision numbers in the change log: https://raw.githubusercontent.com/processing/processing/master/build/shared/revisions.txt
# Only use maxRevision (or minRevision), when your library is known to
# break in a later (or earlier) release. Otherwise, use the default value 0.
minRevision = 0
maxRevision = 0